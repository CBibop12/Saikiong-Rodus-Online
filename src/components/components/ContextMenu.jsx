import React, { useState } from 'react';
import '../../styles/ContextMenu.css';

const ContextMenu = ({ 
    contextMenu, 
    setContextMenu, 
    setInputValue, 
    inputValue, 
    handleInputChange,
    matchState,
    updateMatchState,
    setZoneSelectionMode,
    setPendingZoneEffect
  }) => {
    // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤–≤–æ–¥–∞
    const [modalConfig, setModalConfig] = useState({ 
      isOpen: false, 
      type: '',
      title: '',
      subtitle: '',
      placeholder: '',
      initialValue: '',
      onConfirm: () => {}
    });
    const [modalInputValue, setModalInputValue] = useState('');
    const [buyerOptions, setBuyerOptions] = useState([]); // –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
  
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    const handleModalSubmit = () => {
      modalConfig.onConfirm(modalInputValue);
      setModalConfig({ ...modalConfig, isOpen: false });
      setModalInputValue('');
    };
  
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    const openModal = (config) => {
      setModalConfig({
        isOpen: true,
        ...config
      });
      setModalInputValue(config.initialValue || '');
    };
  
    // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeModal = () => {
      setModalConfig({ ...modalConfig, isOpen: false });
      setModalInputValue('');
    };
  
    // –†–µ–Ω–¥–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤–≤–æ–¥–∞
    const renderInputModal = () => {
      if (!modalConfig.isOpen) return null;
      return (
        <div className="game-modal__overlay">
          <div className="game-modal__container">
            <div className="game-modal__header">
              <h3 className="game-modal__title">{modalConfig.title}</h3>
              {modalConfig.subtitle && (
                <p className="game-modal__subtitle">{modalConfig.subtitle}</p>
              )}
            </div>
            {modalConfig.type === "selectBuyer" ? (
              <select
                className="game-modal__input"
                value={modalInputValue}
                onChange={(e) => setModalInputValue(e.target.value)}
                autoFocus
              >
                <option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ --</option>
                {buyerOptions.map((opt, idx) => (
                  <option key={idx} value={opt.name}>
                    {opt.name} ({opt.currencyValue})
                  </option>
                ))}
              </select>
            ) : (
              <input
                type="text"
                className="game-modal__input"
                value={modalInputValue}
                onChange={(e) => setModalInputValue(e.target.value)}
                placeholder={modalConfig.placeholder}
                autoFocus
              />
            )}
            <div className="game-modal__buttons">
              <button 
                className="game-modal__button game-modal__button--cancel"
                onClick={closeModal}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button 
                className="game-modal__button game-modal__button--confirm"
                onClick={handleModalSubmit}
              >
                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      );
    };
  
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ, –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º
    if (!contextMenu.visible) return null;
  
    // –†–µ–Ω–¥–µ—Ä –º–∞–≥–∞–∑–∏–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é (shop === true)
    if (contextMenu.shop) {
      return (
        <>
          <div
            className="game-context-menu__container"
            style={{ top: contextMenu.y, left: contextMenu.x }}
          >
            <ul className="game-context-menu__list">
              {contextMenu.shopItems.map((item, idx) => {
                // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
                const currencyClass = item.currency.toLowerCase() === "gold" 
                  ? "data-currency='gold'" 
                  : "data-currency='mana'";
                
                return (
                  <li
                    key={idx}
                    className="game-context-menu__item game-context-menu__item--shop"
                    onClick={() => {
                      // –ï—Å–ª–∏ inputValue –ø—É—Å—Ç–æ–π, –≤—ã–±–∏—Ä–∞–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                      if (!inputValue || inputValue.trim().length === 0) {
                        const eligibleBuyers = [
                          ...matchState.teams.red.characters,
                          ...matchState.teams.blue.characters
                        ].filter(ch => {
                          if (item.currency.toLowerCase() === "mana") {
                            return ch.currentMana >= item.price;
                          } else {
                            return true;
                          }
                        });
                        console.log("Eligible buyers:", eligibleBuyers);
                        if (eligibleBuyers.length === 0) {
                          addActionLog(`–ù–∏–∫—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç—å ${item.name}`);
                          return;
                        }
                        setBuyerOptions(eligibleBuyers.map(ch => ({
                          name: ch.name,
                          currencyValue: item.currency.toLowerCase() === "mana" ? ch.currentMana : "–±–∞–ª–∞–Ω—Å"
                        })));
                        openModal({
                          type: "selectBuyer",
                          title: `–ü–æ–∫—É–ø–∫–∞ ${item.name}`,
                          subtitle: `–¶–µ–Ω–∞: ${item.price} ${item.currency.toLowerCase() === "mana" ? "–º–∞–Ω—ã" : item.currency.toLowerCase() === "gold" ? "–∑–æ–ª–æ—Ç–∞" : item.currency}`,
                          placeholder: "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
                          onConfirm: (buyerName) => {
                            if (buyerName) {
                              const newText = `${buyerName}  –ø–æ–∫—É–ø–∞–µ—Ç ${item.name}`;
                              setInputValue(newText);
                              handleInputChange({ target: { value: newText } });
                            }
                            setContextMenu({ ...contextMenu, visible: false });
                          }
                        });
                      } else {
                        // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, –¥–æ–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                        const newText = inputValue + item.name;
                        setInputValue(newText);
                        handleInputChange({ target: { value: newText } });
                        setContextMenu({ ...contextMenu, visible: false });
                      }
                    }}
                  >
                    <span className="game-context-menu__item-name">{item.name}</span>
                    <span className="game-context-menu__item-price" {...currencyClass}>
                      {item.price} {item.currency === "mana" ? "–º–∞–Ω—ã" : item.currency === "gold" ? "–∑–æ–ª–æ—Ç–∞" : item.currency}
                    </span>
                  </li>
                );
              })}
            </ul>
          </div>
          {renderInputModal()}
        </>
      );
    }
    
    // –†–µ–Ω–¥–µ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (isCharacter === true)
    if (contextMenu.isCharacter) {
      const char = contextMenu.character;
      const defaultAttackDamage = char.stats.–£—Ä–æ–Ω;
      return (
        <>
          <div 
            className="game-context-menu__container" 
            style={{ top: contextMenu.y, left: contextMenu.x, position: 'fixed' }}
          >
            <ul className="game-context-menu__list">
              <li 
                className="game-context-menu__item game-context-menu__item--attack"
                onClick={() => {
                  openModal({
                    type: 'attack',
                    title: '–ê—Ç–∞–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞',
                    subtitle: `–£—Ä–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${defaultAttackDamage}`,
                    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—å –¥–ª—è –∞—Ç–∞–∫–∏',
                    onConfirm: (target) => {
                      if (target) {
                        setInputValue(`${char.name}  –∞—Ç–∞–∫—É–µ—Ç –Ω–∞ ${defaultAttackDamage} —Ñ–∏–∑.—É—Ä–æ–Ω–∞ ${target}`);
                        handleInputChange({ target: { value: `${char.name}  –∞—Ç–∞–∫—É–µ—Ç –Ω–∞ ${defaultAttackDamage} —Ñ–∏–∑.—É—Ä–æ–Ω–∞ ${target}` } });
                      }
                      setContextMenu({ ...contextMenu, visible: false });
                    }
                  });
                }}
              >
                <span className="game-context-menu__item-icon">‚öîÔ∏è</span>
                –ê—Ç–∞–∫–æ–≤–∞—Ç—å
              </li>
              <li 
                className="game-context-menu__item game-context-menu__item--buy"
                onClick={() => {
                  setInputValue(`${char.name}  –ø–æ–∫—É–ø–∞–µ—Ç `);
                  handleInputChange({ target: { value: `${char.name}  –ø–æ–∫—É–ø–∞–µ—Ç ` } });
                  setContextMenu({ ...contextMenu, visible: false });
                }}
              >
                <span className="game-context-menu__item-icon">üõí</span>
                –ö—É–ø–∏—Ç—å
              </li>
              <li 
                className="game-context-menu__item game-context-menu__item--effect"
                onClick={() => {
                  openModal({
                    type: 'effect',
                    title: '–ü–æ–ª—É—á–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞',
                    subtitle: '–ù–∞–ø—Ä–∏–º–µ—Ä: –Ø–¥–æ–≤–∏—Ç—ã–π —É—Ä–æ–Ω –Ω–∞ 2 —Ö–æ–¥–æ–≤',
                    placeholder: '–í–≤–µ–¥–∏—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
                    onConfirm: (effect) => {
                      if (effect) {
                        setInputValue(`${char.name}  –ø–æ–ª—É—á–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç ${effect}`);
                      }
                      setContextMenu({ ...contextMenu, visible: false });
                    }
                  });
                }}
              >
                <span className="game-context-menu__item-icon">‚ú®</span>
                –ü–æ–ª—É—á–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç
              </li>
              <li 
                className="game-context-menu__item game-context-menu__item--hp"
                onClick={() => {
                  setInputValue(`HP ${char.name} = `);
                  setContextMenu({ ...contextMenu, visible: false });
                }}
              >
                <span className="game-context-menu__item-icon">‚ù§Ô∏è</span>
                –ü–æ–∫–∞–∑–∞—Ç—å HP
              </li>
              <li 
                className="game-context-menu__item game-context-menu__item--attribute"
                onClick={() => {
                  openModal({
                    type: 'attribute',
                    title: '–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞',
                    subtitle: '–ù–∞–ø—Ä–∏–º–µ—Ä: –õ–æ–≤–∫–æ—Å—Ç—å, –ú–∞–Ω–∞, –£—Ä–æ–Ω',
                    placeholder: '–í–≤–µ–¥–∏—Ç–µ –∞—Ç—Ä–∏–±—É—Ç',
                    onConfirm: (attribute) => {
                      if (attribute) {
                        setInputValue(`${attribute} ${char.name} = `);
                        handleInputChange({ target: { value: `${attribute} ${char.name} = ` } });
                      }
                      setContextMenu({ ...contextMenu, visible: false });
                    }
                  });
                }}
              >
                <span className="game-context-menu__item-icon">üìä</span>
                –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç
              </li>
            </ul>
          </div>
          {renderInputModal()}
        </>
      );
    }

    // –†–µ–Ω–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Ö—Ä–∞–º–∞
    if (contextMenu.church) {
      return (
        <div
          className="game-context-menu__container"
          style={{ top: contextMenu.y, left: contextMenu.x }}
        >
          <div className="game-context-menu__header">
            <div className="game-context-menu__header-title">
                –•—Ä–∞–º {contextMenu.churchTeam === "red" ? "–ö—Ä–∞—Å–Ω—ã—Ö" : "–°–∏–Ω–∏—Ö"}
            </div>
              <span className="game-context-menu__item-price" data-currency="mana">
                {contextMenu.manaPerTurn} –º–∞–Ω—ã/—Ö–æ–¥
              </span>
          </div>
          <ul className="game-context-menu__list">
            <li 
              className="game-context-menu__item game-context-menu__item--switch"
              onClick={() => {
                const newTeam = contextMenu.churchTeam === "red" ? "blue" : "red";
                const newCellClass = newTeam === "red" ? "red-church-cover" : "blue-church-cover";
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∫–ª–µ—Ç–∫–∏
                const [colStr, rowStr] = contextMenu.cellCoord.split("-");
                const col = parseInt(colStr) - 1;
                const row = parseInt(rowStr) - 1;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö—Ä–∞–º–æ–≤
                const updatedChurches = { ...matchState.churches };
                if (contextMenu.churchTeam === "red") {
                  updatedChurches.red = updatedChurches.red.filter(coord => coord !== contextMenu.cellCoord);
                  updatedChurches.blue.push(contextMenu.cellCoord);
                } else {
                  updatedChurches.blue = updatedChurches.blue.filter(coord => coord !== contextMenu.cellCoord);
                  updatedChurches.red.push(contextMenu.cellCoord);
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º matchState
                updateMatchState({ churches: updatedChurches });
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
                setContextMenu({ ...contextMenu, visible: false });
              }}
            >
              <span className="game-context-menu__item-icon">üîÑ</span>
              <span className="game-context-menu__item-name">
                –ü–µ—Ä–µ–¥–∞—Ç—å {contextMenu.churchTeam === "red" ? "–°–∏–Ω–∏–º" : "–ö—Ä–∞—Å–Ω—ã–º"}
              </span>
            </li>
          </ul>
        </div>
      );
    }
    
    // –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω —Ä–µ–∂–∏–º –Ω–µ –ø–æ–¥–æ—à—ë–ª, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
    return null;
};

export default ContextMenu